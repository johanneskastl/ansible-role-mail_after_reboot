---
# mail_after_reboot/tasks/main.yml

- name: 'Set facts depending on operation system, to get the right package and executable'
  ansible.builtin.include_tasks: set_facts.yml

- name: 'Install the package for the mail executable without a reboot'
  ansible.builtin.package:
    name: "{{ mail_package_name }}"
    state: 'present'
  when:
    - 'not ansible_os_family == "openSUSE MicroOS"'
    - 'not ansible_os_family == "openSUSE Leap Micro"'
    - 'not ansible_pkg_mgr == "atomic_container"'

- name: 'Install the package for the mail executable with a reboot'
  ansible.builtin.package:
    name: "{{ mail_package_name }}"
    state: 'present'
  when:
    - '
      ansible_os_family == "openSUSE MicroOS"
      or ansible_os_family == "openSUSE Leap Micro"
      '
  notify:
    - 'Reboot'
    - 'Wait for the machine(s) to be ready again'

- name: 'Install the package for the mail executable on Fedora/RedHat CoreOS with a reboot'
  community.general.rpm_ostree_pkg:
    name: "{{ mail_package_name }}"
    state: 'present'
  when:
    - 'ansible_os_family == "RedHat" and ansible_pkg_mgr == "atomic_container"'
  notify:
    - 'Reboot'
    - 'Wait for the machine(s) to be ready again'

- name: 'Flush handlers to reboot the system, if needed'
  ansible.builtin.meta: flush_handlers

- name: 'Create systemd service file for mail_after_reboot.service'
  ansible.builtin.template:
    src: 'mail_after_reboot.service.j2'
    dest: "{{ systemd_unit_directory }}/mail_after_reboot.service"
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - 'Trigger systemctl daemon-reload'
    - 'Restart the mail_after_reboot.service'

- name: 'Flush handlers to run the systemctl daemon-reload'
  ansible.builtin.meta: flush_handlers

- name: 'Enable the mail_after_reboot.service'
  ansible.builtin.service:
    name: 'mail_after_reboot.service'
    enabled: 'true'
